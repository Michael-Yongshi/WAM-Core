PragmaDirective
   Source: "pragma solidity ^0.5.0;"
ImportDirective "../../introspection/IERC165.sol"
   Source: "import \"../../introspection/IERC165.sol\";"
ContractDefinition "IERC721"
   Source: "contract IERC721 is IERC165 {\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of NFTs in `owner`'s account.\n     */\n    function balanceOf(address owner) public view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the NFT specified by `tokenId`.\n     */\n    function ownerOf(uint256 tokenId) public view returns (address owner);\n\n    /**\n     * @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\n     * another (`to`).\n     *\n     *\n     *\n     * Requirements:\n     * - `from`, `to` cannot be zero.\n     * - `tokenId` must be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this\n     * NFT by either {approve} or {setApprovalForAll}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\n    /**\n     * @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\n     * another (`to`).\n     *\n     * Requirements:\n     * - If the caller is not `from`, it must be approved to move this NFT by\n     * either {approve} or {setApprovalForAll}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public;\n    function approve(address to, uint256 tokenId) public;\n    function getApproved(uint256 tokenId) public view returns (address operator);\n\n    function setApprovalForAll(address operator, bool _approved) public;\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\n\n\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\n}"
  InheritanceSpecifier
     Source: "IERC165"
    UserDefinedTypeName "IERC165"
       Source: "IERC165"
  EventDefinition "Transfer"
     Source: "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);"
    ParameterList
       Source: "(address indexed from, address indexed to, uint256 indexed tokenId)"
      VariableDeclaration "from"
         Type: address
         Source: "address indexed from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "to"
         Type: address
         Source: "address indexed to"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 indexed tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
  EventDefinition "Approval"
     Source: "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);"
    ParameterList
       Source: "(address indexed owner, address indexed approved, uint256 indexed tokenId)"
      VariableDeclaration "owner"
         Type: address
         Source: "address indexed owner"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "approved"
         Type: address
         Source: "address indexed approved"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 indexed tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
  EventDefinition "ApprovalForAll"
     Source: "event ApprovalForAll(address indexed owner, address indexed operator, bool approved);"
    ParameterList
       Source: "(address indexed owner, address indexed operator, bool approved)"
      VariableDeclaration "owner"
         Type: address
         Source: "address indexed owner"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "operator"
         Type: address
         Source: "address indexed operator"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "approved"
         Type: bool
         Source: "bool approved"
        ElementaryTypeName bool
           Source: "bool"
  FunctionDefinition "balanceOf" - public - const
     Source: "function balanceOf(address owner) public view returns (uint256 balance);"
    ParameterList
       Source: "(address owner)"
      VariableDeclaration "owner"
         Type: address
         Source: "address owner"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Source: "(uint256 balance)"
      VariableDeclaration "balance"
         Type: uint256
         Source: "uint256 balance"
        ElementaryTypeName uint256
           Source: "uint256"
  FunctionDefinition "ownerOf" - public - const
     Source: "function ownerOf(uint256 tokenId) public view returns (address owner);"
    ParameterList
       Source: "(uint256 tokenId)"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
    ParameterList
       Source: "(address owner)"
      VariableDeclaration "owner"
         Type: address
         Source: "address owner"
        ElementaryTypeName address
           Source: "address"
  FunctionDefinition "safeTransferFrom" - public
     Source: "function safeTransferFrom(address from, address to, uint256 tokenId) public;"
    ParameterList
       Source: "(address from, address to, uint256 tokenId)"
      VariableDeclaration "from"
         Type: address
         Source: "address from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "to"
         Type: address
         Source: "address to"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
    ParameterList
       Source: ""
  FunctionDefinition "transferFrom" - public
     Source: "function transferFrom(address from, address to, uint256 tokenId) public;"
    ParameterList
       Source: "(address from, address to, uint256 tokenId)"
      VariableDeclaration "from"
         Type: address
         Source: "address from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "to"
         Type: address
         Source: "address to"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
    ParameterList
       Source: ""
  FunctionDefinition "approve" - public
     Source: "function approve(address to, uint256 tokenId) public;"
    ParameterList
       Source: "(address to, uint256 tokenId)"
      VariableDeclaration "to"
         Type: address
         Source: "address to"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
    ParameterList
       Source: ""
  FunctionDefinition "getApproved" - public - const
     Source: "function getApproved(uint256 tokenId) public view returns (address operator);"
    ParameterList
       Source: "(uint256 tokenId)"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
    ParameterList
       Source: "(address operator)"
      VariableDeclaration "operator"
         Type: address
         Source: "address operator"
        ElementaryTypeName address
           Source: "address"
  FunctionDefinition "setApprovalForAll" - public
     Source: "function setApprovalForAll(address operator, bool _approved) public;"
    ParameterList
       Source: "(address operator, bool _approved)"
      VariableDeclaration "operator"
         Type: address
         Source: "address operator"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_approved"
         Type: bool
         Source: "bool _approved"
        ElementaryTypeName bool
           Source: "bool"
    ParameterList
       Source: ""
  FunctionDefinition "isApprovedForAll" - public - const
     Source: "function isApprovedForAll(address owner, address operator) public view returns (bool);"
    ParameterList
       Source: "(address owner, address operator)"
      VariableDeclaration "owner"
         Type: address
         Source: "address owner"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "operator"
         Type: address
         Source: "address operator"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Source: "(bool)"
      VariableDeclaration ""
         Type: bool
         Source: "bool"
        ElementaryTypeName bool
           Source: "bool"
  FunctionDefinition "safeTransferFrom" - public
     Source: "function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;"
    ParameterList
       Source: "(address from, address to, uint256 tokenId, bytes memory data)"
      VariableDeclaration "from"
         Type: address
         Source: "address from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "to"
         Type: address
         Source: "address to"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "tokenId"
         Type: uint256
         Source: "uint256 tokenId"
        ElementaryTypeName uint256
           Source: "uint256"
      VariableDeclaration "data"
         Type: bytes memory
         Source: "bytes memory data"
        ElementaryTypeName bytes
           Source: "bytes"
    ParameterList
       Source: ""
